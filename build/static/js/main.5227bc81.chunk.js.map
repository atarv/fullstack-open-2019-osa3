{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","services_persons","axios","get","concat","then","response","data","newPerson","post","id","delete","person","put","Notification","_ref","message","type","react_default","a","createElement","className","text","Form","_ref2","handleNimi","handleNumero","handleSubmit","onSubmit","onChange","Filter","_ref3","filterNames","NamesList","_ref4","listNames","Person","_ref5","handleDelete","key","name","number","onClick","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNumber","_useState7","_useState8","searchString","setSearchString","_useState9","undefined","_useState10","setMessage","window","confirm","personService","filter","p","catch","setTimeout","useEffect","App_Notification","App_Filter","event","target","value","App_Form","preventDefault","existingPerson","find","existingIndex","findIndex","altered","err","console","log","App_NamesList","map","toLowerCase","includes","App_Person","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5227bc81.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const response = axios.get(`${baseURL}`)\n    return response.then(response => response.data)\n}\n\nconst post = newPerson => {\n    const response = axios.post(`${baseURL}`, newPerson)\n    return response.then(response => response.data)\n}\n\nconst remove = id => {\n    const response = axios.delete(`${baseURL}/${id}`)\n    return response.then(response => response.data)\n}\n\nconst replace = person => {\n    const response = axios.put(`${baseURL}/${person.id}`, person)\n    return response.then(response => response.data)\n}\n\nexport default { getAll, post, remove, replace }\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './App.css'\n\nconst Notification = ({ message }) => {\n    if (!message) return null\n    const type = !message.type ? 'success' : message.type\n    return <div className={type}>{message.text}</div>\n}\n\nconst Form = ({ handleNimi, handleNumero, handleSubmit }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                nimi: <input onChange={handleNimi} />\n            </div>\n            <div>\n                numero: <input onChange={handleNumero} />\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    )\n}\n\nconst Filter = ({ filterNames }) => {\n    return (\n        <div>\n            Rajaa näytettävä <input onChange={filterNames} />\n        </div>\n    )\n}\n\nconst NamesList = ({ listNames }) => {\n    return <ul>{listNames()}</ul>\n}\n\nconst Person = ({ person, handleDelete }) => {\n    return (\n        <li key={person.id}>\n            {person.name} {person.number}\n            <button key={'b' + person.id} onClick={() => handleDelete(person)}>\n                poista\n            </button>\n        </li>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNumber] = useState('')\n    const [searchString, setSearchString] = useState('')\n    const [message, setMessage] = useState(undefined)\n    const listNames = () => {\n        return persons.map(person =>\n            person.name.toLowerCase().includes(searchString.toLowerCase()) ? (\n                <Person person={person} key={person.id} handleDelete={handleDelete} />\n            ) : (\n                undefined\n            )\n        )\n    }\n    const handleDelete = person => {\n        if (!window.confirm(`Poistetaanko ${person.name}?`)) return undefined\n        personService\n            .remove(person.id)\n            .then(() => {\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n            .then(() => setMessage({ text: `Poistettiin ${person.name}`, type: 'success' }))\n            .catch(() => {\n                setMessage({ text: `${person.name} oli jo poistettu palvelimelta`, type: 'error' })\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n        setTimeout(() => setMessage(null), 5000)\n    }\n    const handleNimi = event => {\n        setNewName(event.target.value)\n    }\n    const handleNumero = event => {\n        setNumber(event.target.value)\n    }\n    const filterNames = event => {\n        setSearchString(event.target.value)\n    }\n    const handleSubmit = event => {\n        event.preventDefault()\n        const newPerson = { name: newName, number: newNumber }\n        const existingPerson = persons.find(p => p.name === newName)\n        if (existingPerson) {\n            if (window.confirm(`${newName} on jo luettelossa. Korvataanko numero uudella?`)) {\n                newPerson.id = existingPerson.id\n                personService\n                    .replace(newPerson)\n                    .then(() => {\n                        // etsitään vanha\n                        const existingIndex = persons.findIndex(p => p === existingPerson)\n                        // luodaan kopio listasta, koska React\n                        const altered = persons.concat()\n                        // vaihdetaan kopiossa uusi alkio vanhan tilalle\n                        altered[existingIndex] = newPerson\n                        setPersons(altered)\n                    })\n                    .then(() =>\n                        setMessage({\n                            text: `Päivitettiin henkilön ${newPerson.name} numeroksi ${\n                                newPerson.number\n                            }`,\n                            type: 'success'\n                        })\n                    )\n                    .catch(setMessage({ text: `Päivittäminen epäonnistui`, type: 'error' }))\n                setTimeout(() => setMessage(null), 5000)\n            }\n        } else {\n            personService\n                .post(newPerson)\n                .then(response => setPersons(persons.concat(response)))\n                .then(() => setMessage({ text: `Lisättiin ${newPerson.name}`, type: 'success' }))\n                .catch(err => {\n                    console.log(err.response.data)\n                    setMessage({ text: `Lisääminen epäonnistui`, type: 'error' })\n                })\n            setTimeout(() => setMessage(null), 5000)\n        }\n    }\n    const hook = () => {\n        personService.getAll().then(persons => {\n            setPersons(persons)\n        })\n    }\n\n    useEffect(hook, [])\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Notification message={message} />\n            <Filter filterNames={filterNames} />\n            <h2>Lisää uusi</h2>\n            <Form handleNimi={handleNimi} handleNumero={handleNumero} handleSubmit={handleSubmit} />\n            <h2>Numerot</h2>\n            <NamesList listNames={listNames} handleDelete={handleDelete} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}